# -*- coding: utf-8 -*-
"""Visualization

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wXFk2QYBZ5hdt70xE8qXdGVqhNPm5gh_
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from matplotlib.backends.backend_pdf import PdfPages

with PdfPages('Visualizations.pdf') as pdf:


	data = pd.read_csv('DS_DATESET.csv')

	data.head()

	data.info()

	data.isnull().sum()

	data.drop(['Certifications/Achievement/ Research papers','Link to updated Resume (Google/ One Drive link preferred)','link to Linkedin profile'],axis=1,inplace=True)

	data.isnull().sum()

	data.columns

	col=['Areas of interest','Programming Language Known other than Java (one major)',
	     'How Did You Hear About This Internship?',
	     'Which-year are you studying in?', 'CGPA/ percentage', 
	     'Rate your written communication skills [1-10]',
	     'Rate your verbal communication skills [1-10]', 'Major/Area of Study', 'City',
	     'College name','Label']
	df= data[col]
	df.head()

	df["Label"] = df["Label"].replace({'eligible':1,'ineligible':0})
	df.head()

	"""##**1. Area Of Interest**"""

	df1 = df[["Areas of interest"]]
	df1["Number Of Students"] = 1
	df1 = df1.groupby("Areas of interest")['Number Of Students'].sum()

	df1


	plt.figure(figsize=(20,5))
	ax=sns.countplot(df['Areas of interest'])
	ax.set_title("Number of Students Per Area Of Technology",fontsize=20)
	pdf.savefig()
	
	"""##**2.The number of students that know Python**"""

	df2 = df[df['Areas of interest'] =='Data Science ']
	total = len(df2)
	PC = df2[df2['Programming Language Known other than Java (one major)'] == 'Python'].count()['Programming Language Known other than Java (one major)']
	NPC = total - PC
	print("The number of students that know Python :" , PC)
	print("The number of students that don't know Python :" , NPC)

	df5=df[["Areas of interest","Programming Language Known other than Java (one major)"]]
	df6=df5.groupby(["Areas of interest"])
	df7 = df6.get_group('Data Science ')
	plott=df7["Programming Language Known other than Java (one major)"].value_counts().to_frame()
	plott.plot(kind='bar', figsize=(15, 6),color="skyblue")


	plt.xlabel('Programming Language Known other than Java (one major)')
	plt.ylabel('No of Applicants')
	plt.title('Major Language known by Data Science Applicants')
	pdf.savefig()
    

	"""##**3.How Did You Hear About This Internship?**"""

	s = df.groupby(df["How Did You Hear About This Internship?"])["How Did You Hear About This Internship?"].count()
	s=s.sort_values(ascending = False)
	s

	plt.figure(figsize=(13,5))
	ax=sns.countplot(df['How Did You Hear About This Internship?'])
	ax.set_xlabel("Different Media")
	ax.set_title("How Did You Hear About This Internship?",fontsize=20)
	pdf.savefig()

	"""##**4.Students who are in the fourth year and have a CGPA greater than 8.0.**"""

	students=df[df["Which-year are you studying in?"] == "Fourth-year"]
	total=len(students)
	CGPA= students[students["CGPA/ percentage"] >= 8][["CGPA/ percentage"]]["CGPA/ percentage"].count()
	Less=total-CGPA
	print('Students who are in the fourth year and have a CGPA greater than 8.0. :',CGPA)
	Less

	x = ['Greater than 8','Less Than 8']
	y = [CGPA,Less]
	ax=sns.barplot(x=x,y=y,hue=y,color='darkblue')
	ax.set_xlabel('Range of CGPA')
	ax.set_ylabel('Number Of Student')
	ax.set_title('Fourth Year Students based on CGPA')
	pdf.savefig()
 

	"""##**5.Students who applied for Digital Marketing with verbal and written communication score greater than 8**"""

	dm = df[df["Areas of interest"]=="Digital Marketing "]
	vw=dm[(dm["Rate your written communication skills [1-10]"] > 8) &  (dm["Rate your verbal communication skills [1-10]"] > 8)]
	print("Total Number of students who applied for Digital Marketing:",len(dm))
	print("Students who applied for Digital Marketing with verbal and written communication score greater than 8 :",len(vw))

	x = ['Total','Both>8']
	y = [len(dm),len(vw)]
	ax=sns.barplot(x=x,y=y,hue=y,color='red')
	ax.set_xlabel('Range of CGPA')
	ax.set_ylabel('Number Of Students')
	ax.set_title('Digital Marketing')
	pdf.savefig()
    

	"""## **6. Year Wise Area of Study**"""

	ya = df[["Which-year are you studying in?","Major/Area of Study","City"]].copy()
	ya = ya.groupby(["Which-year are you studying in?","Major/Area of Study"],as_index=False)['City'].count()
	print(ya)

	y1 = ya[ya["Major/Area of Study"] == "Computer Engineering" ]["City"]
	y2 = ya[ya["Major/Area of Study"] == "Electrical Engineering" ]["City"]
	y3 = ya[ya["Major/Area of Study"] == "Electronics and Telecommunication" ]["City"]

	labels = ya["Which-year are you studying in?"].unique()
	x = np.arange(len(labels))
	width = 0.25 
	plt.rcParams["figure.figsize"]= 10,8

	fig, ax = plt.subplots()
	rects1 = ax.bar(x + 0.0 , y1, width, label='Computer Engineering')
	rects2 = ax.bar(x + 0.25 , y2, width, label='Electrical Engineering')
	rects3 = ax.bar(x + 0.5 , y3, width, label='Electronics and Telecommunication')
	ax.set_ylabel('No Of Students')
	ax.set_title('Year wise area of study')
	ax.set_xticks(x)
	ax.set_xticklabels(labels)
	ax.legend(loc='upper right')
	pdf.savefig()
    

	"""## **7. College & Area Wise Classification**"""

	cc = df[["College name","City","Major/Area of Study"]].copy()
	cc = cc.groupby(["City","College name"],as_index=False)['Major/Area of Study'].count()
	cc

	cllgplot=df['College name'].value_counts().to_frame()
	cllgplot.plot(kind='barh', figsize=(15, 8),color="skyblue")
	plt.ylabel("College Name")
	plt.xlabel('Number of Applicants')
	plt.title('College Wise')
	pdf.savefig()
    

	"""## **8. CGPA vs Target Variable**"""

	ax = sns.regplot(x=df['CGPA/ percentage'],y=df['Label'],data=df,fit_reg=False)
	ax.set_xlabel('CGPA Range')
	ax.set_ylabel('Target Variable')
	ax.legend(loc='center')
	ax.set_title('Relationship between CGPA and Target variable')
	pdf.savefig()
    

	"""## **8. Area of interest vs Target Variable**"""

	plt.rcParams.update({'font.size': 13})
	ax = sns.regplot(x=df['Areas of interest'],y=df['Label'],data=df,fit_reg=False)
	ax.set_xlabel('Areas of interest')
	ax.set_xticklabels(df['Areas of interest'],rotation=90)
	ax.set_ylabel('Target Variable')
	ax.legend(loc='center')
	ax.set_title('Relationship between Areas of interest and Target variable')
	pdf.savefig()


	"""##**Year of study ,Major and Target Variable**"""

	ym = df[["City","Major/Area of Study","Which-year are you studying in?","Label"]]
	ym = ym.groupby(["Which-year are you studying in?","Major/Area of Study","Label"],as_index=False).count()
	ym

	fig, ax = plt.subplots()
	Fourth = ym[ym["Which-year are you studying in?"] == 'Fourth-year']
	print(Fourth)

	total_comp = Fourth[Fourth["Major/Area of Study"]=="Computer Engineering"]["City"].sum()
	total_elec = Fourth[Fourth["Major/Area of Study"]=="Electrical Engineering"]["City"].sum()
	total_extc = Fourth[Fourth["Major/Area of Study"]=="Electronics and Telecommunication"]["City"].sum()

	y1 = Fourth[Fourth["Label"] == 0]["City"]
	y2 = Fourth[Fourth["Label"] == 1]["City"]
	y3 = [total_comp,total_elec,total_extc]
	labels=Fourth["Major/Area of Study"].unique()
	x = np.arange(len(labels))
	width = 0.25

	s3 = ax.bar(x , y3, width, label='Total',align='center',color='darkblue')
	s1 = ax.bar(x + 0.25 , y1, width, label='Ineligible',align='center',color='skyblue')
	s2 = ax.bar(x + 0.5, y2, width, label='Eligible',align='center',color='black')

	ax.set_ylabel('Number Of Students')
	ax.set_title('Area of Study and Fourth Year')
	ax.set_xticks(x+0.25)
	ax.set_xticklabels(labels)
	ax.legend(loc='center left', bbox_to_anchor=(1, 0.5))
	pdf.savefig()
   
	plt.show()


